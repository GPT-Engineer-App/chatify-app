   npm install express mongoose socket.io
   ```

2. **Create Server File (server.js)**:
   ```javascript
   const express = require('express');
   const http = require('http');
   const mongoose = require('mongoose');
   const socketIo = require('socket.io');
   const cors = require('cors');

   const app = express();
   const server = http.createServer(app);
   const io = socketIo(server, {
     cors: {
       origin: '*',
     },
   });

   app.use(cors());
   app.use(express.json());

   // MongoDB connection
   mongoose.connect('mongodb://localhost:27017/chat', { useNewUrlParser: true, useUnifiedTopology: true });

   const MessageSchema = new mongoose.Schema({
     username: String,
     message: String,
     timestamp: { type: Date, default: Date.now },
   });

   const Message = mongoose.model('Message', MessageSchema);

   io.on('connection', (socket) => {
     console.log('New client connected');

     socket.on('sendMessage', async (data) => {
       const message = new Message(data);
       await message.save();
       io.emit('receiveMessage', data);
     });

     socket.on('disconnect', () => {
       console.log('Client disconnected');
     });
   });

   app.get('/messages', async (req, res) => {
     const messages = await Message.find();
     res.send(messages);
   });

   const PORT = process.env.PORT || 5000;
   server.listen(PORT, () => console.log(`Server running on port ${PORT}`));
   ```

### Frontend Setup (React)

Now, let's create the frontend part in a single file as requested.

src/pages/Index.jsx